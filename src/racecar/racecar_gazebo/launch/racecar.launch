<?xml version="1.0"?>
<launch>
  <!-- 设置launch文件的参数 -->
  <arg name="paused" default="false"/>
  <arg name="world_name" default="racetrack" />
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true" />
  <arg name="run_camera" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!--模型车的位置不能修改-->
  <arg name="x_pos" default="-0.5"/>
  <arg name="y_pos" default="0"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find racecar_gazebo)/worlds/$(arg world_name).world"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)" />
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <!-- 加载机器人模型描述参数 -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find racecar_description)/urdf/racecar.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <!-- 在gazebo中加载机器人模型-->
  <node name="racecar_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model racecar -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)" />

  <!--运行robot_state_publisher节点，发布机器人关节状态
  <node name = "robot_state_publisher" pkg = "robot_state_publisher" type = "state_publisher">
	<param name="publish_frequency" type="double" value="20.0" />
  </node> 
  上述代码为官方提供的launch文件中的源码，在racecar_control.launch文件中已包含-->

  <!-- ros_control racecar launch file -->
  <!-- 加载racecar控制器 -->
  <include file="$(find racecar_control)/launch/racecar_control.launch" ns="/"/>

  <!-- Spawn the MUXs -->
  <arg name="racecar_version" default="racecar-v2" />
  <include file="$(find racecar)/launch/mux.launch" ns="vesc" />

  <!-- Publish "better odom" topic that is normally generated by the particle filter -->
  <!--node name="better_odom" pkg="topic_tools" type="relay"
          args="/vesc/odom/pf/pose/odom" / -->
    
  <!-- Launch the simulation joystick control-->
  <!-- 启动键盘控制节点-->
  <!-- <rosparam command="load" file="$(find racecar_gazebo)/config/keyboard_teleop.yaml" /> -->
  <!--读取键盘控制配置-->
  <!-- <node pkg="racecar_gazebo" type="keyboard_teleop.py" name="keyboard_teleop" /> -->

</launch>
